<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git教程 on 喵落阁</title>
    <link>https://blog-v4.kemiaosw.top/tags/git%E6%95%99%E7%A8%8B/</link>
    <description>Recent content in Git教程 on 喵落阁</description>
    <generator>Hugo</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Fri, 04 Apr 2025 21:11:57 +0800</lastBuildDate>
    <atom:link href="https://blog-v4.kemiaosw.top/tags/git%E6%95%99%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git 同步上游仓库的更新</title>
      <link>https://blog-v4.kemiaosw.top/posts/git-tongbu/</link>
      <pubDate>Fri, 04 Apr 2025 20:13:57 +0800</pubDate>
      <guid>https://blog-v4.kemiaosw.top/posts/git-tongbu/</guid>
      <description>&lt;h2 id=&#34;git-同步上游仓库的更新&#34;&gt;Git 同步上游仓库的更新&lt;/h2&gt;&#xA;&lt;p&gt;　　使用一个 Github Template 创建了我自己的仓库，需要同步一下补丁更新，总不能自己手抄一遍吧，搜了一下解决方案。&lt;/p&gt;&#xA;&lt;p&gt;　　记录一下。&lt;/p&gt;&#xA;&lt;h3 id=&#34;添加上游仓库&#34;&gt;添加上游仓库&lt;/h3&gt;&#xA;&lt;p&gt;　　给上游仓库取个名字，如果将命名为 &lt;code&gt;upstream&lt;/code&gt;​ ，可以在本地仓库中运行以下命令：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git remote add upstream https://github.com/$&amp;lt;upstream-repo&amp;gt;.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;获取上游仓库的更改&#34;&gt;获取上游仓库的更改&lt;/h3&gt;&#xA;&lt;p&gt;　　运行以下命令以获取上游仓库中的所有分支和提交：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git fetch upstream&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;合并上游更改&#34;&gt;合并上游更改&lt;/h3&gt;&#xA;&lt;p&gt;　　现在，将上游 main 分支的更改合并到您的本地 main 分支：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git merge upstream/main --allow-unrelated-histories&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;　　如果只需要合并特定的 commit ：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git cherry-pick &amp;lt;commit-hash&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;　　也可以使用&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcp &amp;lt;commit-hash&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;　　commit-hash 可以直接从 github 网页上复制。&lt;/p&gt;&#xA;&lt;p&gt;　　这时 commit 的作者是源仓库的作者， Vercel 提示我 Build 失败，需要升级到 Pro，可以再修改一个文件，自己添加一条 commit 。&lt;/p&gt;&#xA;&lt;p&gt;　　当然这很不优雅，可以使用下面的命令获取更改到文件，但是不会提交 commit ，&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git cherry-pick &amp;lt;commit-hash&amp;gt; --no-commit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;　　然后手动提交一下&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;commit information&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;解决冲突&#34;&gt;解决冲突&lt;/h3&gt;&#xA;&lt;p&gt;　　如何自己已经修改过源代码，在合并过程中可能发生冲突，需要手动解决。&lt;br&gt;&#xA;Git 也会进行提示，手动编辑冲突文件并保存，然后再提交更改。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
